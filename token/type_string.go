// Code generated by "stringer -type=Type"; DO NOT EDIT.

package token

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ILLEGAL-0]
	_ = x[EOF-1]
	_ = x[literal_beg-2]
	_ = x[IDENT-3]
	_ = x[CONST-4]
	_ = x[GLOBAL-5]
	_ = x[INT-6]
	_ = x[FLOAT-7]
	_ = x[STRING-8]
	_ = x[REGEX-9]
	_ = x[REGEX_MODIFIER-10]
	_ = x[literal_end-11]
	_ = x[operator_beg-12]
	_ = x[operator_assign_beg-13]
	_ = x[ASSIGN-14]
	_ = x[ADDASSIGN-15]
	_ = x[SUBASSIGN-16]
	_ = x[MULASSIGN-17]
	_ = x[DIVASSIGN-18]
	_ = x[MODASSIGN-19]
	_ = x[operator_assign_end-20]
	_ = x[PLUS-21]
	_ = x[MINUS-22]
	_ = x[BANG-23]
	_ = x[ASTERISK-24]
	_ = x[SLASH-25]
	_ = x[MODULO-26]
	_ = x[AND-27]
	_ = x[LOGICALAND-28]
	_ = x[PIPE-29]
	_ = x[LOGICALOR-30]
	_ = x[LT-31]
	_ = x[LTE-32]
	_ = x[GT-33]
	_ = x[GTE-34]
	_ = x[EQ-35]
	_ = x[NOTEQ-36]
	_ = x[SPACESHIP-37]
	_ = x[LSHIFT-38]
	_ = x[operator_end-39]
	_ = x[HASHROCKET-40]
	_ = x[LAMBDAROCKET-41]
	_ = x[NEWLINE-42]
	_ = x[COMMA-43]
	_ = x[SEMICOLON-44]
	_ = x[HASH-45]
	_ = x[CAPTURE-46]
	_ = x[DOT-47]
	_ = x[DDOT-48]
	_ = x[DDDOT-49]
	_ = x[COLON-50]
	_ = x[LPAREN-51]
	_ = x[RPAREN-52]
	_ = x[LBRACE-53]
	_ = x[RBRACE-54]
	_ = x[LBRACKET-55]
	_ = x[RBRACKET-56]
	_ = x[SCOPE-57]
	_ = x[AT-58]
	_ = x[QMARK-59]
	_ = x[SQMARK-60]
	_ = x[SYMBEG-61]
	_ = x[keyword_beg-62]
	_ = x[DEF-63]
	_ = x[SELF-64]
	_ = x[END-65]
	_ = x[IF-66]
	_ = x[THEN-67]
	_ = x[ELSE-68]
	_ = x[UNLESS-69]
	_ = x[TRUE-70]
	_ = x[FALSE-71]
	_ = x[RETURN-72]
	_ = x[NIL-73]
	_ = x[MODULE-74]
	_ = x[CLASS-75]
	_ = x[DO-76]
	_ = x[YIELD-77]
	_ = x[BEGIN-78]
	_ = x[RESCUE-79]
	_ = x[WHILE-80]
	_ = x[KEYWORD__FILE__-81]
	_ = x[keyword_end-82]
}

const _Type_name = "ILLEGALEOFliteral_begIDENTCONSTGLOBALINTFLOATSTRINGREGEXREGEX_MODIFIERliteral_endoperator_begoperator_assign_begASSIGNADDASSIGNSUBASSIGNMULASSIGNDIVASSIGNMODASSIGNoperator_assign_endPLUSMINUSBANGASTERISKSLASHMODULOANDLOGICALANDPIPELOGICALORLTLTEGTGTEEQNOTEQSPACESHIPLSHIFToperator_endHASHROCKETLAMBDAROCKETNEWLINECOMMASEMICOLONHASHCAPTUREDOTDDOTDDDOTCOLONLPARENRPARENLBRACERBRACELBRACKETRBRACKETSCOPEATQMARKSQMARKSYMBEGkeyword_begDEFSELFENDIFTHENELSEUNLESSTRUEFALSERETURNNILMODULECLASSDOYIELDBEGINRESCUEWHILEKEYWORD__FILE__keyword_end"

var _Type_index = [...]uint16{0, 7, 10, 21, 26, 31, 37, 40, 45, 51, 56, 70, 81, 93, 112, 118, 127, 136, 145, 154, 163, 182, 186, 191, 195, 203, 208, 214, 217, 227, 231, 240, 242, 245, 247, 250, 252, 257, 266, 272, 284, 294, 306, 313, 318, 327, 331, 338, 341, 345, 350, 355, 361, 367, 373, 379, 387, 395, 400, 402, 407, 413, 419, 430, 433, 437, 440, 442, 446, 450, 456, 460, 465, 471, 474, 480, 485, 487, 492, 497, 503, 508, 523, 534}

func (i Type) String() string {
	if i < 0 || i >= Type(len(_Type_index)-1) {
		return "Type(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Type_name[_Type_index[i]:_Type_index[i+1]]
}
